[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog\nMy name is Hannah Preissler. I am a senior at the University of Nebraska- Lincoln and I am studying Sports Media and Communication. I am a member of Inner Circle, a leadership organization for student-athletes to help improve professional development. I am a member of the track and field team at UNL as well. Outside of sports and academics, I have a photography business that keeps me busy."
  },
  {
    "objectID": "is-nebraska-volleyballs-success-attributed-to-offense-or-defense/index.html",
    "href": "is-nebraska-volleyballs-success-attributed-to-offense-or-defense/index.html",
    "title": "CHANGE THIS TO BE THE TITLE OF YOUR POST",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggrepel)\nlibrary(ggalt)\n\n\nRegistered S3 methods overwritten by 'ggalt':\n  method                  from   \n  grid.draw.absoluteGrob  ggplot2\n  grobHeight.absoluteGrob ggplot2\n  grobWidth.absoluteGrob  ggplot2\n  grobX.absoluteGrob      ggplot2\n  grobY.absoluteGrob      ggplot2\n\n\nCode\ntop25 &lt;- c(\"Nebraska\", \"Wisconsin\", \"Louisville\", \"Texas\", \"Stanford\", \"Pittsburgh\", \"Oregon\", \"Arkansas\", \"Washington St.\", \"Georgia Tech\", \"Tennessee\", \"BYU\", \"Kentucky\", \"Kansas\", \"Arizona St.\", \"Creighton\", \"Purdue\", \"Dayton\", \"Penn St.\", \"Baylor\", \"Florida\", \"Houston\", \"Western Ky.\", \"Auburn\", \"Southern California\")\n\nhittingpct &lt;- read_csv(\"newhitting.csv\") |&gt; \n  mutate(Team = gsub(\"(FL)\", \"FL\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(NY)\", \"NY\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(PA)\", \"PA\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(OH)\", \"OH\", Team, fixed=TRUE)) |&gt;\n  separate(Team, into=c(\"Team\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference)) |&gt; \n  mutate(Team = str_trim(Team))\n\n\nRows: 332 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Team, W-L\ndbl (4): Rank, S, Errors, Pct.\nnum (2): Kills, Total Attacks\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 2 pieces. Additional pieces discarded in 2 rows [25, 159].\n\n\nCode\nkillsperset &lt;- read_csv(\"newkills.csv\") |&gt; \n  mutate(Team = gsub(\"(FL)\", \"FL\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(NY)\", \"NY\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(PA)\", \"PA\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(OH)\", \"OH\", Team, fixed=TRUE)) |&gt;\n  separate(Team, into=c(\"Team\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference)) |&gt; \n  mutate(Team = str_trim(Team))\n\n\nRows: 332 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Team, W-L\ndbl (3): Rank, S, Per Set\nnum (1): Kills\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 2 pieces. Additional pieces discarded in 2 rows [80, 174].\n\n\nCode\nopphitting &lt;- read_csv(\"opphit.csv\") |&gt; \n  mutate(Team = gsub(\"(FL)\", \"FL\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(NY)\", \"NY\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(PA)\", \"PA\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(OH)\", \"OH\", Team, fixed=TRUE)) |&gt;\n  separate(Team, into=c(\"Team\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference)) |&gt; \n  mutate(Team = str_trim(Team))\n\n\nRows: 332 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Team\ndbl (4): Rank, S, Opp Errors, Opp Pct\nnum (2): Opp Kills, Opp Attacks\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 2 pieces. Additional pieces discarded in 2 rows [25, 156].\n\n\nCode\nblocks &lt;- read_csv(\"blocksperset.csv\") |&gt; \n  mutate(Team = gsub(\"(FL)\", \"FL\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(NY)\", \"NY\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(PA)\", \"PA\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(OH)\", \"OH\", Team, fixed=TRUE)) |&gt;\n  separate(Team, into=c(\"Team\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference)) |&gt; \n  mutate(Team = str_trim(Team))\n\n\nRows: 332 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Team, W-L\ndbl (5): Rank, S, Block Solos, Block Assists, Per Set\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 2 pieces. Additional pieces discarded in 2 rows [7, 20].\n\n\nCode\ndigs &lt;- read_csv(\"digs.csv\") |&gt; \n  mutate(Team = gsub(\"(FL)\", \"FL\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(NY)\", \"NY\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(PA)\", \"PA\", Team, fixed=TRUE)) |&gt;\n  mutate(Team = gsub(\"(OH)\", \"OH\", Team, fixed=TRUE)) |&gt;\n  separate(Team, into=c(\"Team\", \"Conference\"), sep=\"\\\\(\") |&gt; \n  mutate(Conference=gsub(\")\", \"\", Conference)) |&gt; \n  mutate(Team = str_trim(Team))\n\n\nRows: 332 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Team, W-L\ndbl (3): Rank, S, Per Set\nnum (1): Digs\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: Expected 2 pieces. Additional pieces discarded in 2 rows [248, 298].\n\n\nCode\ndefense &lt;- blocks |&gt; inner_join(digs, by=c(\"Team\" = \"Team\", \"Conference\" = \"Conference\", \"S\" = \"S\"))\n\ndbell &lt;- defense |&gt; \n  filter(Team %in% top25) |&gt; \n  select(Team, Conference, `Per Set.x`, `Per Set.y`) |&gt; \n  rename(BlocksPerSet = 3, DigsPerSet =4) |&gt; \n  pivot_longer(cols=c(-Team, -Conference), names_to=\"Type\", values_to=\"PerSet\")\n\noffense &lt;- hittingpct |&gt; inner_join(killsperset, by=c(\"Team\" = \"Team\", \"Conference\" = \"Conference\", \"Kills\" = \"Kills\"))\n\nhitting &lt;- hittingpct |&gt; inner_join(opphitting, by=c(\"Team\" = \"Team\", \"Conference\" = \"Conference\", \"S\" = \"S\"))\n\ntop15 &lt;- c(\"Nebraska\", \"Wisconsin\", \"Louisville\", \"Texas\", \"Stanford\",\"Louisville\" , \"Pittsburgh\", \"Oregon\", \"Arkansas\", \"Washington St.\", \"Georgia Tech\", \"Tennessee\", \"BYU\", \"Kentucky\", \"Kansas\", \"Arizona St.\")\n\njoined_top15 &lt;- offense |&gt;\n  filter(Team %in% top15)\n\nnu &lt;- offense |&gt; filter(Team == \"Nebraska\")\n wi &lt;- offense |&gt; filter(Team == \"Wisconsin\")\n pi &lt;- offense |&gt; filter(Team == \"Pittsburgh\")\n tn &lt;- offense |&gt; filter(Team == \"Tennessee\")\n st &lt;- offense |&gt; filter(Team == \"Stanford\")\n \n\nggplot() + \n  geom_point(data=offense, aes(x=Kills, y=`Per Set`), color=\"lightgrey\") +\n  geom_point(data=joined_top15, aes(x=Kills, y=`Per Set`), color=\"lightblue\") +\n  geom_point(data=nu, aes(x=Kills, y=`Per Set`), color=\"red\") +\n  geom_text_repel(data=nu, aes(x=Kills, y=`Per Set`, label=Team), size = 4) +\n  labs(x=\"Team Kills\",\n       y=\"Kills Per Set\", \n       title=\"Nebraska’s Offensive Efficiency Stands Out Among Top Contenders\", \n       subtitle=\"The Huskers Kills Per Set and Total Team Kills are Two Factors Contributing to their Success\", \n       caption=\"Source: NCCA.com | By Hannah Preissler\") + \n  theme_minimal() + \n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\n\n\n\n\n\nCode\nhitting25 &lt;- hitting |&gt;\n  filter(Team %in% top25)\n\nggplot() + \n  geom_dumbbell(\n    data=hitting25, \n    aes(y=Team, x=Pct., xend=`Opp Pct`),\n    size = 1,\n    color = \"grey\",\n    colour_x = \"green\",\n    colour_xend = \"red\") + \n  labs(title = \"Nebraska Hits Well and Keeps Opponents from Hitting Well\", \n    subtitle =\" &lt;span style = 'color:green;'&gt;Hitting Percentage&lt;/span&gt; and &lt;span style = 'color:red;'&gt;Opponent Hitting Percentage&lt;/span&gt;\", \n    y=\"\", \n    x=\"Opponent Hitting Percentage (Red) and Hitting Percentage (Green)\",\n    caption=\"Source: NCAA.com | By Hannah Preissler\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 15, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n    )\n\n\nWarning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.\nℹ Please use the `linewidth` aesthetic instead.\n\n\n\n\n\n\n\nCode\nggplot() + \n  geom_bar(data=dbell, aes(x=Team, weight=PerSet, fill=Type)) + \n  coord_flip() +\n   labs(\n     title = \"\", \n     subtitle =\"\", \n     y=\"\", \n     x=\"\",\n     caption=\"Source: NCAA.com | By Hannah Preissler\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    axis.title = element_text(size = 8), \n    plot.subtitle = element_text(size=10), \n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "posts/introduction/index.html",
    "href": "posts/introduction/index.html",
    "title": "Hello.",
    "section": "",
    "text": "Hi, welcome to my blog! My name is Hannah Preissler. This is where I will be uploading my projects for SPMC 350."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Hello.\n\n\n\n\n\n\n\nsports\n\n\ndata\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nHannah Preissler\n\n\n\n\n\n\nNo matching items"
  }
]